---

name: test

"on":
  push:
    paths-ignore:
      - 'LICENSE'
      - 'README.*'
      - 'docs/*'
      - '.github/dockerfiles/**'
    branches:
      - master
  pull_request:
    paths-ignore:
      - 'LICENSE'
      - 'README.*'
      - 'docs/*'
      - '.github/dockerfiles/**'

env:
  APP_NAME: 'tkfm'
  JAVA_VERSION: '17'
  JAVAFX_VERSION: '17'

defaults:
  run:
    shell: bash

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v4.0.0
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}
          java-package: jdk
          architecture: x64
      - name: Install xvfb
        run: sudo apt install -y xvfb
      - name: Check code style
        run: ./gradlew spotlessCheck
      - name: Test
        run: xvfb-run ./gradlew test jacocoTestReport -x detekt
      - name: Send coverage report
        run: bash <(curl -s https://codecov.io/bash)

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4.0.0
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}
          java-package: jdk
          architecture: x64
      - name: Lint
        run: ./gradlew detekt

  build-artifact:
    runs-on: ${{ matrix.os }}
    env:
      VERSION: 0.0.0-SNAPSHOT
    strategy:
      matrix:
        include:
          - os: windows-latest
            os_name: windows
            archive_cmd: 7z a
            artifact_ext: .zip
            entrypoint_script_ext: .bat

          - os: macOS-latest
            os_name: osx
            archive_cmd: tar czf
            artifact_ext: .tar.gz
            entrypoint_script_ext: ''

          - os: ubuntu-latest
            os_name: linux
            archive_cmd: tar czf
            artifact_ext: .tar.gz
            entrypoint_script_ext: ''
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4.0.0
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}
          java-package: jdk
          architecture: x64

      - name: Set build version information
        run: |
          echo ORG_GRADLE_PROJECT_CI_VERSION="${VERSION}" >> $GITHUB_ENV
          echo ORG_GRADLE_PROJECT_CI_COMMIT_HASH="$(git rev-parse HEAD)" >> $GITHUB_ENV

      - name: Build
        run: ./gradlew build -x test -x detekt

      - name: Create artifact
        run: >
          OS_NAME="${{ matrix.os_name }}"
          ARCHIVE_CMD="${{ matrix.archive_cmd }}"
          ARTIFACT_EXT="${{ matrix.artifact_ext }}"
          ENTRYPOINT_SCRIPT_EXT="${{ matrix.entrypoint_script_ext }}"
          ./script/create_artifact.sh

      - uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: |
            ./dist/*
        if: github.ref != 'refs/heads/master'
