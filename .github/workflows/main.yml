name: build

on:
  push:

env:
  JAVAFX_VERSION: '11.0.2'

jobs:
  before:
    runs-on: ubuntu-latest
    if: "! contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - run: echo "${{ github.event.head_commit.message }}"

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - windows-latest
          - macOS-latest
          - ubuntu-latest
    needs: before
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '13'
          java-package: jdk
          architecture: x64
      - name: Build
        run: ./gradlew build

      - name: Set os_name
        run: echo ::set-output name=os_name::$(if [ ${{ matrix.os }} = windows-latest ]; then echo windows; elif [ ${{ matrix.os }} = macOS-latest ]; then echo osx; elif [ ${{ matrix.os }} = ubuntu-latest ]; then echo linux; fi)
      - name: Create artifact
        # if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo "os_name = ${{ steps.vars.outputs.os_name }}"
          mkdir -p jmods/${{ matrix.os_name }}
          curl -O jmods/${{ matrix.os_name }}/jmods.zip -sSL https://download2.gluonhq.com/openjfx/${{ env.JAVAFX_VERSION }}/openjfx-${{ env.JAVAFX_VERSION }}_${{ matrix.os_name }}-x64_bin-jmods.zip
          pushd jmods/${{ matrix.os_name }}
          unzip jmods.zip
          popd
          ./link.sh "jmods/${{ matrix.os_name }}/javafx-jmods-${{ env.JAVAFX_VERSION }}"
          mkdir tkfm_${{ matrix.os_name }}
          cp -r build/libs/tkfm.jar jre tkfm_${{ matrix.os_name }}/
          mkdir dist
          if [ ${{ matrix.os_name }} = windows ]; then
            7z a tkfm_${{ matrix.os_name }}.zip tkfm_${{ matrix.os_name }}
            mv tkfm_${{ matrix.os_name }}.zip dist/
          else
            tar czf tkfm_${{ matrix.os_name }}.tar.gz tkfm_${{ matrix.os_name }}
            mv tkfm_${{ matrix.os_name }}.tar.gz dist/
          fi
      - name: Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: 'dist/tkfm_*.*'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  create-tag-draft:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: build
    steps:
      - uses: release-drafter/release-drafter@v5.3.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
